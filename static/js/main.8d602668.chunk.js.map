{"version":3,"sources":["component/Pagination.js","component/Users.js","App.js","index.js"],"names":["Pagination","usersPerPage","totalUsers","paginate","pageNumbers","i","Math","ceil","push","className","map","number","onClick","href","User","users","loading","data","id","src","avatar","alt","first_name","title","last_name","email","App","useState","setUsers","setLoading","currentPage","setCurrentPage","useEffect","a","fetch","response","json","resJson","fetchApi","indexofLastPost","indexofFirstPost","currentUsers","slice","length","pageNumber","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRA0BeA,EAxBI,SAAC,GAGhB,IAHwD,IAAvCC,EAAsC,EAAtCA,aAAcC,EAAwB,EAAxBA,WAAWC,EAAa,EAAbA,SACpCC,EAAc,GAEZC,EAAI,EAAGA,GAAKC,KAAKC,KAAKL,EAAWD,GAAeI,IACpDD,EAAYI,KAAKH,GAGrB,OACI,qBAAKI,UAAU,oBAAf,SACA,qBAAKA,UAAU,kBAAf,SACG,oBAAIA,UAAU,aAAd,SACKL,EAAYM,KAAI,SAAAC,GAAM,OACnB,oBAAiBF,UAAU,YAA3B,SACK,mBAAGG,QAAS,kBAAMT,EAASQ,IAASE,KAAK,KAAKJ,UAAU,YAAxD,SACKE,KAFDA,aCcbG,EA5BF,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,MAEX,OAF6B,EAAZC,QAGN,2CAIX,sBAAKP,UAAU,UAAf,UACA,sBAAKA,UAAU,cAAf,UACI,qCACA,uCACA,8CAIEM,EAAML,KAAI,SAACO,GAAD,OACR,sBAAKR,UAAU,WAAf,UACI,8BAAMQ,EAAKC,KACX,gCAAK,qBAAKC,IAAKF,EAAKG,OAAQX,UAAU,cAAcY,IAAKJ,EAAKK,WAAYC,MAAON,EAAKK,aAAcL,EAAKK,WAAzG,IAAsHL,EAAKO,aAE3H,8BAAMP,EAAKQ,UAJgBR,EAAKC,WCwBjCQ,MAlCf,WACE,MAAyBC,mBAAS,IAAlC,mBAAOZ,EAAP,KAAaa,EAAb,KACA,EAA6BD,oBAAS,GAAtC,mBAAOX,EAAP,KAAea,EAAf,KACA,EAAqCF,mBAAS,GAA9C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAuBJ,mBAAS,GAAzB1B,EAAP,oBAGA+B,qBAAU,YACM,uCAAG,8BAAAC,EAAA,2GAEQC,MAFR,qDAETC,EAFS,gBAGOA,EAASC,OAHhB,OAGTC,EAHS,OAKjBT,EAASS,EAAQpB,MACjBY,GAAW,GANM,2CAAH,qDAQdS,KACD,IAGH,IAAMC,EAAkBT,EAAc7B,EAChCuC,EAAmBD,EAAkBtC,EACrCwC,EAAe1B,EAAM2B,MAAMF,EAAiBD,GAGhD,OACE,sBAAK9B,UAAU,MAAf,UACI,cAAC,EAAD,CAAMM,MAAO0B,EAAczB,QAASA,IACpC,cAAC,EAAD,CAAYf,aAAcA,EAAcC,WAAYa,EAAM4B,OAAQxC,SAJzD,SAACyC,GAAD,OAAgBb,EAAea,UCxBhDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8d602668.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Pagination = ({usersPerPage, totalUsers,paginate}) =>{\r\n    const pageNumbers = [];\r\n\r\n    for(let i = 1; i <= Math.ceil(totalUsers/usersPerPage); i++){\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n    return(\r\n        <div className=\"wrapper paginator\">\r\n        <div className=\"data-pagination\">\r\n           <ul className=\"pagination\">\r\n               {pageNumbers.map(number =>(\r\n                   <li key={number} className=\"page-item\">\r\n                        <a onClick={() => paginate(number)} href=\"!#\" className=\"page-link\">\r\n                            {number}\r\n                        </a>\r\n                   </li>\r\n               ))}\r\n           </ul>\r\n           </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;","const User = ({users,loading}) =>{\r\n\r\n    if(loading){\r\n        return <p>loading...</p>\r\n    }\r\n   \r\n   return(\r\n    <div className=\"wrapper\">\r\n    <div className=\"row-heading\">\r\n        <div>Id</div>\r\n        <div>Name</div>\r\n        <div>Email id</div>\r\n\r\n    </div>\r\n       {\r\n          users.map((data) =>(\r\n            <div className=\"row-data\" key={data.id}>\r\n                <div>{data.id}</div>\r\n                <div><img src={data.avatar} className=\"profile-pic\" alt={data.first_name} title={data.first_name}/>{data.first_name} {data.last_name}</div>\r\n           \r\n                <div>{data.email}</div>\r\n            </div>\r\n          ))\r\n        }\r\n        </div>\r\n   );\r\n};\r\n\r\nexport default User;","import { useEffect, useState } from 'react';\nimport './App.css';\nimport Pagination from './component/Pagination';\nimport User from './component/Users';\n\n\nfunction App() {\n  const [users,setUsers] = useState([]);\n  const [loading,setLoading] = useState(true);\n  const [currentPage,setCurrentPage] = useState(1);\n  const [usersPerPage] = useState(6);\n\n\n  useEffect(()=>{\n    const fetchApi = async() =>{\n      const url = `https://reqres.in/api/users?page=2 `;\n      const response = await fetch(url);\n      const resJson = await response.json();\n    //   console.log(resJson);\n    setUsers(resJson.data);\n    setLoading(false);\n    };\n    fetchApi();\n },[]);\n  \n\nconst indexofLastPost = currentPage * usersPerPage;\nconst indexofFirstPost = indexofLastPost - usersPerPage;\nconst currentUsers = users.slice(indexofFirstPost,indexofLastPost);\n\nconst paginate = (pageNumber) => setCurrentPage(pageNumber);\n  return (\n    <div className=\"App\">\n        <User users={currentUsers} loading={loading} />\n        <Pagination usersPerPage={usersPerPage} totalUsers={users.length} paginate={paginate}/>\n    \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}